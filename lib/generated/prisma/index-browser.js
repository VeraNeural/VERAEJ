
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Chat_messagesScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  user_id: 'user_id',
  role: 'role',
  content: 'content',
  audio_url: 'audio_url',
  created_at: 'created_at'
};

exports.Prisma.Chat_sessionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  message_count: 'message_count',
  created_at: 'created_at',
  updated_at: 'updated_at',
  messages: 'messages'
};

exports.Prisma.Check_insScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mood: 'mood',
  energy: 'energy',
  stress: 'stress',
  sleep: 'sleep',
  note: 'note',
  timestamp: 'timestamp',
  created_at: 'created_at'
};

exports.Prisma.Coaching_sessionsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  coach_id: 'coach_id',
  session_type: 'session_type',
  status: 'status',
  scheduled_at: 'scheduled_at',
  duration_minutes: 'duration_minutes',
  max_participants: 'max_participants',
  meeting_link: 'meeting_link',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_channelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  channel_type: 'channel_type',
  required_tier: 'required_tier',
  icon: 'icon',
  position: 'position',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_eventsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  host_id: 'host_id',
  event_type: 'event_type',
  scheduled_at: 'scheduled_at',
  duration_minutes: 'duration_minutes',
  max_attendees: 'max_attendees',
  meeting_link: 'meeting_link',
  recording_url: 'recording_url',
  status: 'status',
  required_tier: 'required_tier',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_pollsScalarFieldEnum = {
  id: 'id',
  channel_id: 'channel_id',
  created_by: 'created_by',
  question: 'question',
  options: 'options',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.Community_postsScalarFieldEnum = {
  id: 'id',
  channel_id: 'channel_id',
  user_id: 'user_id',
  content: 'content',
  is_pinned: 'is_pinned',
  is_announcement: 'is_announcement',
  reply_to_id: 'reply_to_id',
  attachments: 'attachments',
  created_at: 'created_at',
  updated_at: 'updated_at',
  post_type: 'post_type'
};

exports.Prisma.Community_resourcesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  resource_type: 'resource_type',
  file_url: 'file_url',
  thumbnail_url: 'thumbnail_url',
  category: 'category',
  required_tier: 'required_tier',
  download_count: 'download_count',
  uploaded_by: 'uploaded_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Daily_check_ins_simpleScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  date: 'date',
  state: 'state',
  created_at: 'created_at'
};

exports.Prisma.Daily_checkinsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mood: 'mood',
  energy: 'energy',
  stress: 'stress',
  sleep: 'sleep',
  note: 'note',
  created_at: 'created_at'
};

exports.Prisma.Daily_ritualsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  date: 'date',
  nervous_system_state: 'nervous_system_state',
  ritual_text: 'ritual_text',
  ritual_type: 'ritual_type',
  completed: 'completed',
  completed_at: 'completed_at',
  reflection: 'reflection',
  created_at: 'created_at'
};

exports.Prisma.Direct_messagesScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  sender_id: 'sender_id',
  recipient_id: 'recipient_id',
  content: 'content',
  is_read: 'is_read',
  attachments: 'attachments',
  created_at: 'created_at'
};

exports.Prisma.Event_rsvpsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  user_id: 'user_id',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.FilesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  size: 'size',
  type: 'type',
  url: 'url',
  uploaded_at: 'uploaded_at',
  created_at: 'created_at'
};

exports.Prisma.Journal_entriesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  prompt_id: 'prompt_id',
  response: 'response',
  timestamp: 'timestamp',
  created_at: 'created_at'
};

exports.Prisma.Journal_promptsScalarFieldEnum = {
  id: 'id',
  prompt_text: 'prompt_text',
  category: 'category',
  created_at: 'created_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  session_id: 'session_id',
  role: 'role',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.Password_reset_tokensScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expires_at: 'expires_at',
  used: 'used',
  used_at: 'used_at',
  created_at: 'created_at'
};

exports.Prisma.Poll_votesScalarFieldEnum = {
  id: 'id',
  poll_id: 'poll_id',
  user_id: 'user_id',
  option_id: 'option_id',
  created_at: 'created_at'
};

exports.Prisma.PollsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  question: 'question',
  options: 'options',
  closes_at: 'closes_at',
  created_at: 'created_at'
};

exports.Prisma.Post_commentsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Post_reactionsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  reaction_type: 'reaction_type',
  created_at: 'created_at'
};

exports.Prisma.Protocol_completionsScalarFieldEnum = {
  id: 'id',
  protocol_id: 'protocol_id',
  user_id: 'user_id',
  completed_at: 'completed_at',
  notes: 'notes'
};

exports.Prisma.Protocol_itemsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  description: 'description',
  category: 'category',
  frequency: 'frequency',
  is_active: 'is_active',
  completion_count: 'completion_count',
  last_completed: 'last_completed',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProtocolsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  description: 'description',
  category: 'category',
  frequency: 'frequency',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ritual_libraryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  ritual_text: 'ritual_text',
  ritual_type: 'ritual_type',
  state_match: 'state_match',
  created_by: 'created_by',
  created_at: 'created_at'
};

exports.Prisma.Session_messagesScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  user_id: 'user_id',
  content: 'content',
  message_type: 'message_type',
  created_at: 'created_at'
};

exports.Prisma.Session_participantsScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  user_id: 'user_id',
  status: 'status',
  joined_at: 'joined_at',
  created_at: 'created_at'
};

exports.Prisma.Test_usersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  subscription_tier: 'subscription_tier',
  subscription_status: 'subscription_status',
  created_at: 'created_at'
};

exports.Prisma.User_insightsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  insight_type: 'insight_type',
  content: 'content',
  confidence_score: 'confidence_score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_journal_responsesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  prompt_id: 'prompt_id',
  response_date: 'response_date',
  session_id: 'session_id',
  created_at: 'created_at'
};

exports.Prisma.User_rolesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  subscription_status: 'subscription_status',
  subscription_tier: 'subscription_tier',
  trial_ends_at: 'trial_ends_at',
  timezone: 'timezone',
  notifications: 'notifications',
  email_updates: 'email_updates',
  privacy_mode: 'privacy_mode',
  is_admin: 'is_admin',
  created_at: 'created_at',
  updated_at: 'updated_at',
  password: 'password',
  orientation_completed: 'orientation_completed',
  orientation_data: 'orientation_data',
  test_mode: 'test_mode',
  stripe_customer_id: 'stripe_customer_id',
  stripe_subscription_id: 'stripe_subscription_id'
};

exports.Prisma.Voice_usageScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  chat_messages: 'chat_messages',
  chat_sessions: 'chat_sessions',
  check_ins: 'check_ins',
  coaching_sessions: 'coaching_sessions',
  community_channels: 'community_channels',
  community_events: 'community_events',
  community_polls: 'community_polls',
  community_posts: 'community_posts',
  community_resources: 'community_resources',
  daily_check_ins_simple: 'daily_check_ins_simple',
  daily_checkins: 'daily_checkins',
  daily_rituals: 'daily_rituals',
  direct_messages: 'direct_messages',
  event_rsvps: 'event_rsvps',
  files: 'files',
  journal_entries: 'journal_entries',
  journal_prompts: 'journal_prompts',
  messages: 'messages',
  password_reset_tokens: 'password_reset_tokens',
  poll_votes: 'poll_votes',
  polls: 'polls',
  post_comments: 'post_comments',
  post_reactions: 'post_reactions',
  protocol_completions: 'protocol_completions',
  protocol_items: 'protocol_items',
  protocols: 'protocols',
  ritual_library: 'ritual_library',
  session_messages: 'session_messages',
  session_participants: 'session_participants',
  test_users: 'test_users',
  user_insights: 'user_insights',
  user_journal_responses: 'user_journal_responses',
  user_roles: 'user_roles',
  users: 'users',
  voice_usage: 'voice_usage'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
