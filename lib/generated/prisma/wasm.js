
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Chat_messagesScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  user_id: 'user_id',
  role: 'role',
  content: 'content',
  audio_url: 'audio_url',
  created_at: 'created_at'
};

exports.Prisma.Chat_sessionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  message_count: 'message_count',
  created_at: 'created_at',
  updated_at: 'updated_at',
  messages: 'messages'
};

exports.Prisma.Check_insScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mood: 'mood',
  energy: 'energy',
  stress: 'stress',
  sleep: 'sleep',
  note: 'note',
  timestamp: 'timestamp',
  created_at: 'created_at'
};

exports.Prisma.Coaching_sessionsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  coach_id: 'coach_id',
  session_type: 'session_type',
  status: 'status',
  scheduled_at: 'scheduled_at',
  duration_minutes: 'duration_minutes',
  max_participants: 'max_participants',
  meeting_link: 'meeting_link',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_channelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  channel_type: 'channel_type',
  required_tier: 'required_tier',
  icon: 'icon',
  position: 'position',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_eventsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  host_id: 'host_id',
  event_type: 'event_type',
  scheduled_at: 'scheduled_at',
  duration_minutes: 'duration_minutes',
  max_attendees: 'max_attendees',
  meeting_link: 'meeting_link',
  recording_url: 'recording_url',
  status: 'status',
  required_tier: 'required_tier',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_pollsScalarFieldEnum = {
  id: 'id',
  channel_id: 'channel_id',
  created_by: 'created_by',
  question: 'question',
  options: 'options',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.Community_postsScalarFieldEnum = {
  id: 'id',
  channel_id: 'channel_id',
  user_id: 'user_id',
  content: 'content',
  is_pinned: 'is_pinned',
  is_announcement: 'is_announcement',
  reply_to_id: 'reply_to_id',
  attachments: 'attachments',
  created_at: 'created_at',
  updated_at: 'updated_at',
  post_type: 'post_type'
};

exports.Prisma.Community_resourcesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  resource_type: 'resource_type',
  file_url: 'file_url',
  thumbnail_url: 'thumbnail_url',
  category: 'category',
  required_tier: 'required_tier',
  download_count: 'download_count',
  uploaded_by: 'uploaded_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Daily_check_ins_simpleScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  date: 'date',
  state: 'state',
  created_at: 'created_at'
};

exports.Prisma.Daily_checkinsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mood: 'mood',
  energy: 'energy',
  stress: 'stress',
  sleep: 'sleep',
  note: 'note',
  created_at: 'created_at'
};

exports.Prisma.Daily_ritualsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  date: 'date',
  nervous_system_state: 'nervous_system_state',
  ritual_text: 'ritual_text',
  ritual_type: 'ritual_type',
  completed: 'completed',
  completed_at: 'completed_at',
  reflection: 'reflection',
  created_at: 'created_at'
};

exports.Prisma.Direct_messagesScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  sender_id: 'sender_id',
  recipient_id: 'recipient_id',
  content: 'content',
  is_read: 'is_read',
  attachments: 'attachments',
  created_at: 'created_at'
};

exports.Prisma.Event_rsvpsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  user_id: 'user_id',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.FilesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  size: 'size',
  type: 'type',
  url: 'url',
  uploaded_at: 'uploaded_at',
  created_at: 'created_at'
};

exports.Prisma.Journal_entriesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  prompt_id: 'prompt_id',
  response: 'response',
  timestamp: 'timestamp',
  created_at: 'created_at'
};

exports.Prisma.Journal_promptsScalarFieldEnum = {
  id: 'id',
  prompt_text: 'prompt_text',
  category: 'category',
  created_at: 'created_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  session_id: 'session_id',
  role: 'role',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.Password_reset_tokensScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expires_at: 'expires_at',
  used: 'used',
  used_at: 'used_at',
  created_at: 'created_at'
};

exports.Prisma.Poll_votesScalarFieldEnum = {
  id: 'id',
  poll_id: 'poll_id',
  user_id: 'user_id',
  option_id: 'option_id',
  created_at: 'created_at'
};

exports.Prisma.PollsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  question: 'question',
  options: 'options',
  closes_at: 'closes_at',
  created_at: 'created_at'
};

exports.Prisma.Post_commentsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Post_reactionsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  reaction_type: 'reaction_type',
  created_at: 'created_at'
};

exports.Prisma.Protocol_completionsScalarFieldEnum = {
  id: 'id',
  protocol_id: 'protocol_id',
  user_id: 'user_id',
  completed_at: 'completed_at',
  notes: 'notes'
};

exports.Prisma.Protocol_itemsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  description: 'description',
  category: 'category',
  frequency: 'frequency',
  is_active: 'is_active',
  completion_count: 'completion_count',
  last_completed: 'last_completed',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProtocolsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  description: 'description',
  category: 'category',
  frequency: 'frequency',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ritual_libraryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  ritual_text: 'ritual_text',
  ritual_type: 'ritual_type',
  state_match: 'state_match',
  created_by: 'created_by',
  created_at: 'created_at'
};

exports.Prisma.Session_messagesScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  user_id: 'user_id',
  content: 'content',
  message_type: 'message_type',
  created_at: 'created_at'
};

exports.Prisma.Session_participantsScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  user_id: 'user_id',
  status: 'status',
  joined_at: 'joined_at',
  created_at: 'created_at'
};

exports.Prisma.Test_usersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  subscription_tier: 'subscription_tier',
  subscription_status: 'subscription_status',
  created_at: 'created_at'
};

exports.Prisma.User_insightsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  insight_type: 'insight_type',
  content: 'content',
  confidence_score: 'confidence_score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_journal_responsesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  prompt_id: 'prompt_id',
  response_date: 'response_date',
  session_id: 'session_id',
  created_at: 'created_at'
};

exports.Prisma.User_rolesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  subscription_status: 'subscription_status',
  subscription_tier: 'subscription_tier',
  trial_ends_at: 'trial_ends_at',
  timezone: 'timezone',
  notifications: 'notifications',
  email_updates: 'email_updates',
  privacy_mode: 'privacy_mode',
  is_admin: 'is_admin',
  created_at: 'created_at',
  updated_at: 'updated_at',
  password: 'password',
  orientation_completed: 'orientation_completed',
  orientation_data: 'orientation_data',
  test_mode: 'test_mode',
  stripe_customer_id: 'stripe_customer_id',
  stripe_subscription_id: 'stripe_subscription_id'
};

exports.Prisma.Voice_usageScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  chat_messages: 'chat_messages',
  chat_sessions: 'chat_sessions',
  check_ins: 'check_ins',
  coaching_sessions: 'coaching_sessions',
  community_channels: 'community_channels',
  community_events: 'community_events',
  community_polls: 'community_polls',
  community_posts: 'community_posts',
  community_resources: 'community_resources',
  daily_check_ins_simple: 'daily_check_ins_simple',
  daily_checkins: 'daily_checkins',
  daily_rituals: 'daily_rituals',
  direct_messages: 'direct_messages',
  event_rsvps: 'event_rsvps',
  files: 'files',
  journal_entries: 'journal_entries',
  journal_prompts: 'journal_prompts',
  messages: 'messages',
  password_reset_tokens: 'password_reset_tokens',
  poll_votes: 'poll_votes',
  polls: 'polls',
  post_comments: 'post_comments',
  post_reactions: 'post_reactions',
  protocol_completions: 'protocol_completions',
  protocol_items: 'protocol_items',
  protocols: 'protocols',
  ritual_library: 'ritual_library',
  session_messages: 'session_messages',
  session_participants: 'session_participants',
  test_users: 'test_users',
  user_insights: 'user_insights',
  user_journal_responses: 'user_journal_responses',
  user_roles: 'user_roles',
  users: 'users',
  voice_usage: 'voice_usage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Projects\\veraej\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Projects\\veraej\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel chat_messages {\n  id            String         @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  session_id    String?        @db.Uuid\n  user_id       String?        @db.Uuid\n  role          String         @db.VarChar(50)\n  content       String\n  audio_url     String?\n  created_at    DateTime?      @default(now()) @db.Timestamp(6)\n  chat_sessions chat_sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users         users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([session_id], map: \"idx_chat_messages_session_id\")\n}\n\nmodel chat_sessions {\n  id                     String                   @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id                String?                  @db.Uuid\n  title                  String?                  @default(\"New conversation\") @db.VarChar(255)\n  message_count          Int?                     @default(0)\n  created_at             DateTime?                @default(now()) @db.Timestamp(6)\n  updated_at             DateTime?                @default(now()) @db.Timestamp(6)\n  messages               Json?\n  chat_messages          chat_messages[]\n  users                  users?                   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  user_journal_responses user_journal_responses[]\n  messages_relation      messages[]\n\n  @@index([user_id], map: \"idx_chat_sessions_user_id\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel check_ins {\n  id         String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id    String    @db.Uuid\n  mood       Int\n  energy     Int\n  stress     Int\n  sleep      Int\n  note       String?\n  timestamp  DateTime? @default(now()) @db.Timestamp(6)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([timestamp], map: \"idx_check_ins_timestamp\")\n  @@index([user_id], map: \"idx_check_ins_user\")\n}\n\nmodel coaching_sessions {\n  id                   String                 @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  title                String                 @db.VarChar(255)\n  description          String?\n  coach_id             String                 @db.Uuid\n  session_type         String                 @db.VarChar(50)\n  status               String?                @default(\"scheduled\") @db.VarChar(50)\n  scheduled_at         DateTime?              @db.Timestamp(6)\n  duration_minutes     Int?                   @default(60)\n  max_participants     Int?\n  meeting_link         String?\n  notes                String?\n  created_at           DateTime?              @default(now()) @db.Timestamp(6)\n  updated_at           DateTime?              @default(now()) @db.Timestamp(6)\n  users                users                  @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  session_messages     session_messages[]\n  session_participants session_participants[]\n\n  @@index([coach_id], map: \"idx_coaching_sessions_coach\")\n}\n\nmodel community_channels {\n  id              String            @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name            String            @db.VarChar(100)\n  slug            String            @unique @db.VarChar(100)\n  description     String?\n  channel_type    String?           @default(\"public\") @db.VarChar(50)\n  required_tier   String?           @db.VarChar(50)\n  icon            String?           @db.VarChar(50)\n  position        Int?              @default(0)\n  created_by      String?           @db.Uuid\n  created_at      DateTime?         @default(now()) @db.Timestamp(6)\n  updated_at      DateTime?         @default(now()) @db.Timestamp(6)\n  users           users?            @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  community_polls community_polls[]\n  community_posts community_posts[]\n\n  @@index([slug], map: \"idx_community_channels_slug\")\n}\n\nmodel community_events {\n  id               String        @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  title            String        @db.VarChar(255)\n  description      String?\n  host_id          String        @db.Uuid\n  event_type       String        @db.VarChar(50)\n  scheduled_at     DateTime      @db.Timestamp(6)\n  duration_minutes Int?          @default(60)\n  max_attendees    Int?\n  meeting_link     String?\n  recording_url    String?\n  status           String?       @default(\"upcoming\") @db.VarChar(50)\n  required_tier    String?       @db.VarChar(50)\n  created_at       DateTime?     @default(now()) @db.Timestamp(6)\n  updated_at       DateTime?     @default(now()) @db.Timestamp(6)\n  users            users         @relation(fields: [host_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  event_rsvps      event_rsvps[]\n\n  @@index([scheduled_at], map: \"idx_community_events_scheduled\")\n}\n\nmodel community_polls {\n  id                 String             @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  channel_id         String             @db.Uuid\n  created_by         String             @db.Uuid\n  question           String\n  options            Json\n  expires_at         DateTime?          @db.Timestamp(6)\n  created_at         DateTime?          @default(now()) @db.Timestamp(6)\n  community_channels community_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users              users              @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  poll_votes         poll_votes[]\n\n  @@index([channel_id], map: \"idx_community_polls_channel\")\n}\n\nmodel community_posts {\n  id                    String             @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  channel_id            String             @db.Uuid\n  user_id               String             @db.Uuid\n  content               String\n  is_pinned             Boolean?           @default(false)\n  is_announcement       Boolean?           @default(false)\n  reply_to_id           String?            @db.Uuid\n  attachments           Json?\n  created_at            DateTime?          @default(now()) @db.Timestamp(6)\n  updated_at            DateTime?          @default(now()) @db.Timestamp(6)\n  post_type             String?            @default(\"text\") @db.VarChar(50)\n  community_channels    community_channels @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  community_posts       community_posts?   @relation(\"community_postsTocommunity_posts\", fields: [reply_to_id], references: [id], onUpdate: NoAction)\n  other_community_posts community_posts[]  @relation(\"community_postsTocommunity_posts\")\n  users                 users              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  polls                 polls[]\n  post_comments         post_comments[]\n  post_reactions        post_reactions[]\n\n  @@index([channel_id], map: \"idx_community_posts_channel\")\n  @@index([created_at(sort: Desc)], map: \"idx_community_posts_created\")\n  @@index([user_id], map: \"idx_community_posts_user\")\n}\n\nmodel community_resources {\n  id             String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  title          String    @db.VarChar(255)\n  description    String?\n  resource_type  String    @db.VarChar(50)\n  file_url       String?\n  thumbnail_url  String?\n  category       String?   @db.VarChar(100)\n  required_tier  String?   @db.VarChar(50)\n  download_count Int?      @default(0)\n  uploaded_by    String?   @db.Uuid\n  created_at     DateTime? @default(now()) @db.Timestamp(6)\n  updated_at     DateTime? @default(now()) @db.Timestamp(6)\n  users          users?    @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel daily_check_ins_simple {\n  id         String    @id @db.Uuid\n  user_id    String?   @db.Uuid\n  date       DateTime  @db.Date\n  state      String    @db.VarChar(50)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([user_id, date(sort: Desc)], map: \"idx_daily_check_ins_user_date\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel daily_checkins {\n  id         String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id    String    @db.VarChar(255)\n  mood       Int\n  energy     Int\n  stress     Int\n  sleep      Int\n  note       String?\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n\n  @@index([user_id, created_at(sort: Desc)], map: \"idx_daily_checkins_user_date\")\n}\n\nmodel daily_rituals {\n  id                   String    @id @db.Uuid\n  user_id              String?   @db.Uuid\n  date                 DateTime  @db.Date\n  nervous_system_state String?   @db.VarChar(50)\n  ritual_text          String\n  ritual_type          String?   @db.VarChar(50)\n  completed            Boolean?  @default(false)\n  completed_at         DateTime? @db.Timestamp(6)\n  reflection           String?\n  created_at           DateTime? @default(now()) @db.Timestamp(6)\n  users                users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([user_id, date(sort: Desc)], map: \"idx_daily_rituals_user_date\")\n}\n\nmodel direct_messages {\n  id                                        String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  conversation_id                           String    @db.Uuid\n  sender_id                                 String    @db.Uuid\n  recipient_id                              String    @db.Uuid\n  content                                   String\n  is_read                                   Boolean?  @default(false)\n  attachments                               Json?\n  created_at                                DateTime? @default(now()) @db.Timestamp(6)\n  users_direct_messages_recipient_idTousers users     @relation(\"direct_messages_recipient_idTousers\", fields: [recipient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users_direct_messages_sender_idTousers    users     @relation(\"direct_messages_sender_idTousers\", fields: [sender_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([conversation_id], map: \"idx_direct_messages_conversation\")\n}\n\nmodel event_rsvps {\n  id               String           @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  event_id         String           @db.Uuid\n  user_id          String           @db.Uuid\n  status           String?          @default(\"registered\") @db.VarChar(50)\n  created_at       DateTime?        @default(now()) @db.Timestamp(6)\n  community_events community_events @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users            users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([event_id, user_id])\n}\n\nmodel files {\n  id          String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id     String    @db.Uuid\n  name        String    @db.VarChar(255)\n  size        Int\n  type        String    @db.VarChar(100)\n  url         String\n  uploaded_at DateTime? @default(now()) @db.Timestamp(6)\n  created_at  DateTime? @default(now()) @db.Timestamp(6)\n  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([user_id], map: \"idx_files_user\")\n}\n\nmodel journal_entries {\n  id         String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id    String    @db.Uuid\n  prompt_id  String?   @db.Uuid\n  response   String\n  timestamp  DateTime? @default(now()) @db.Timestamp(6)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([prompt_id], map: \"idx_journal_entries_prompt\")\n  @@index([user_id], map: \"idx_journal_entries_user\")\n}\n\nmodel journal_prompts {\n  id                     String                   @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  prompt_text            String\n  category               String?                  @db.VarChar(50)\n  created_at             DateTime?                @default(now()) @db.Timestamp(6)\n  user_journal_responses user_journal_responses[]\n}\n\nmodel messages {\n  id            String         @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id       String?        @db.Uuid\n  session_id    String?        @db.Uuid\n  role          String         @db.VarChar(50)\n  content       String\n  created_at    DateTime?      @default(now()) @db.Timestamp(6)\n  chat_sessions chat_sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users         users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([user_id], map: \"idx_messages_user_id\")\n}\n\nmodel password_reset_tokens {\n  id         String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id    String    @db.Uuid\n  token      String    @unique @db.VarChar(255)\n  expires_at DateTime  @db.Timestamp(6)\n  used       Boolean?  @default(false)\n  used_at    DateTime? @db.Timestamp(6)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([expires_at], map: \"idx_reset_tokens_expires\")\n  @@index([token], map: \"idx_reset_tokens_token\")\n  @@index([user_id], map: \"idx_reset_tokens_user\")\n}\n\nmodel poll_votes {\n  id              String          @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  poll_id         String          @db.Uuid\n  user_id         String          @db.Uuid\n  option_id       String          @db.VarChar(50)\n  created_at      DateTime?       @default(now()) @db.Timestamp(6)\n  community_polls community_polls @relation(fields: [poll_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users           users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([poll_id, user_id])\n  @@index([poll_id], map: \"idx_poll_votes_poll\")\n  @@index([user_id], map: \"idx_poll_votes_user\")\n}\n\nmodel polls {\n  id              String          @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  post_id         String          @db.Uuid\n  question        String\n  options         Json\n  closes_at       DateTime?       @db.Timestamp(6)\n  created_at      DateTime?       @default(now()) @db.Timestamp(6)\n  community_posts community_posts @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([post_id], map: \"idx_polls_post\")\n}\n\nmodel post_comments {\n  id              String          @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  post_id         String          @db.Uuid\n  user_id         String          @db.Uuid\n  content         String\n  created_at      DateTime?       @default(now()) @db.Timestamp(6)\n  updated_at      DateTime?       @default(now()) @db.Timestamp(6)\n  community_posts community_posts @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users           users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([created_at], map: \"idx_comments_created\")\n  @@index([post_id], map: \"idx_comments_post\")\n  @@index([user_id], map: \"idx_comments_user\")\n}\n\nmodel post_reactions {\n  id              String          @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  post_id         String          @db.Uuid\n  user_id         String          @db.Uuid\n  reaction_type   String          @db.VarChar(50)\n  created_at      DateTime?       @default(now()) @db.Timestamp(6)\n  community_posts community_posts @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users           users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([post_id, user_id, reaction_type])\n  @@index([post_id], map: \"idx_post_reactions_post\")\n}\n\nmodel protocol_completions {\n  id           String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  protocol_id  String    @db.Uuid\n  user_id      String    @db.Uuid\n  completed_at DateTime? @default(now()) @db.Timestamp(6)\n  notes        String?\n  protocols    protocols @relation(fields: [protocol_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([protocol_id, completed_at(sort: Desc)], map: \"idx_protocol_completions_protocol\")\n  @@index([user_id, completed_at(sort: Desc)], map: \"idx_protocol_completions_user\")\n}\n\nmodel protocol_items {\n  id               String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id          String    @db.Uuid\n  title            String    @db.VarChar(255)\n  description      String?\n  category         String    @db.VarChar(100)\n  frequency        String?   @default(\"daily\") @db.VarChar(50)\n  is_active        Boolean?  @default(true)\n  completion_count Int?      @default(0)\n  last_completed   DateTime? @db.Timestamp(6)\n  created_at       DateTime? @default(now()) @db.Timestamp(6)\n  updated_at       DateTime? @default(now()) @db.Timestamp(6)\n  users            users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([category], map: \"idx_protocol_items_category\")\n  @@index([user_id], map: \"idx_protocol_items_user\")\n}\n\nmodel protocols {\n  id                   String                 @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id              String                 @db.Uuid\n  title                String                 @db.VarChar(255)\n  description          String?\n  category             String?                @db.VarChar(100)\n  frequency            String?                @db.VarChar(50)\n  is_active            Boolean?               @default(true)\n  created_at           DateTime?              @default(now()) @db.Timestamp(6)\n  updated_at           DateTime?              @default(now()) @db.Timestamp(6)\n  protocol_completions protocol_completions[]\n\n  @@index([user_id, created_at(sort: Desc)], map: \"idx_protocols_user\")\n}\n\nmodel ritual_library {\n  id          String    @id @db.Uuid\n  title       String?   @db.VarChar(255)\n  description String?\n  ritual_text String?\n  ritual_type String?   @db.VarChar(50)\n  state_match String?   @db.VarChar(50)\n  created_by  String?   @db.Uuid\n  created_at  DateTime? @default(now()) @db.Timestamp(6)\n  users       users?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([state_match], map: \"idx_ritual_library_state\")\n}\n\nmodel session_messages {\n  id                String            @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  session_id        String            @db.Uuid\n  user_id           String            @db.Uuid\n  content           String\n  message_type      String?           @default(\"message\") @db.VarChar(50)\n  created_at        DateTime?         @default(now()) @db.Timestamp(6)\n  coaching_sessions coaching_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users             users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel session_participants {\n  id                String            @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  session_id        String            @db.Uuid\n  user_id           String            @db.Uuid\n  status            String?           @default(\"invited\") @db.VarChar(50)\n  joined_at         DateTime?         @db.Timestamp(6)\n  created_at        DateTime?         @default(now()) @db.Timestamp(6)\n  coaching_sessions coaching_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users             users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([session_id, user_id])\n  @@index([session_id], map: \"idx_session_participants_session\")\n}\n\nmodel test_users {\n  id                  String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name                String    @db.VarChar(255)\n  email               String    @unique @db.VarChar(255)\n  password_hash       String    @db.VarChar(255)\n  subscription_tier   String?   @default(\"integrator\") @db.VarChar(50)\n  subscription_status String?   @default(\"active\") @db.VarChar(50)\n  created_at          DateTime? @default(now()) @db.Timestamp(6)\n}\n\nmodel user_insights {\n  id               String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id          String?   @db.Uuid\n  insight_type     String    @db.VarChar(100)\n  content          String\n  confidence_score Decimal?  @default(1.0) @db.Decimal(3, 2)\n  created_at       DateTime? @default(now()) @db.Timestamp(6)\n  updated_at       DateTime? @default(now()) @db.Timestamp(6)\n  users            users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([user_id, insight_type, content])\n}\n\nmodel user_journal_responses {\n  id              String           @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id         String           @db.Uuid\n  prompt_id       String?          @db.Uuid\n  response_date   DateTime         @db.Date\n  session_id      String?          @db.Uuid\n  created_at      DateTime?        @default(now()) @db.Timestamp(6)\n  journal_prompts journal_prompts? @relation(fields: [prompt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  chat_sessions   chat_sessions?   @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@unique([user_id, response_date])\n}\n\nmodel user_roles {\n  id         String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user_id    String    @db.Uuid\n  role       String    @db.VarChar(50)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([user_id, role])\n  @@index([user_id], map: \"idx_user_roles_user\")\n}\n\nmodel users {\n  id                                                  String                   @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name                                                String?                  @db.VarChar(255)\n  email                                               String                   @unique @db.VarChar(255)\n  password_hash                                       String                   @db.VarChar(255)\n  subscription_status                                 String?                  @default(\"trial\") @db.VarChar(50)\n  subscription_tier                                   String?                  @default(\"free\") @db.VarChar(50)\n  trial_ends_at                                       DateTime?                @db.Timestamp(6)\n  timezone                                            String?                  @default(\"America/New_York\") @db.VarChar(100)\n  notifications                                       Boolean?                 @default(true)\n  email_updates                                       Boolean?                 @default(false)\n  privacy_mode                                        Boolean?                 @default(false)\n  is_admin                                            Boolean?                 @default(false)\n  created_at                                          DateTime?                @default(now()) @db.Timestamp(6)\n  updated_at                                          DateTime?                @default(now()) @db.Timestamp(6)\n  password                                            String?                  @db.VarChar(255)\n  orientation_completed                               Boolean?                 @default(false)\n  orientation_data                                    Json?\n  test_mode                                           Boolean?                 @default(false)\n  stripe_customer_id                                  String?                  @db.VarChar(255)\n  stripe_subscription_id                              String?                  @db.VarChar(255)\n  chat_messages                                       chat_messages[]\n  chat_sessions                                       chat_sessions[]\n  check_ins                                           check_ins[]\n  coaching_sessions                                   coaching_sessions[]\n  community_channels                                  community_channels[]\n  community_events                                    community_events[]\n  community_polls                                     community_polls[]\n  community_posts                                     community_posts[]\n  community_resources                                 community_resources[]\n  daily_check_ins_simple                              daily_check_ins_simple[]\n  daily_rituals                                       daily_rituals[]\n  direct_messages_direct_messages_recipient_idTousers direct_messages[]        @relation(\"direct_messages_recipient_idTousers\")\n  direct_messages_direct_messages_sender_idTousers    direct_messages[]        @relation(\"direct_messages_sender_idTousers\")\n  event_rsvps                                         event_rsvps[]\n  files                                               files[]\n  journal_entries                                     journal_entries[]\n  messages                                            messages[]\n  password_reset_tokens                               password_reset_tokens[]\n  poll_votes                                          poll_votes[]\n  post_comments                                       post_comments[]\n  post_reactions                                      post_reactions[]\n  protocol_items                                      protocol_items[]\n  ritual_library                                      ritual_library[]\n  session_messages                                    session_messages[]\n  session_participants                                session_participants[]\n  user_insights                                       user_insights[]\n  user_roles                                          user_roles[]\n  voice_usage                                         voice_usage[]\n\n  @@index([email], map: \"idx_users_email\")\n}\n\nmodel voice_usage {\n  id         String    @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  user_id    String    @db.Uuid\n  created_at DateTime? @default(now()) @db.Timestamptz(6)\n  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([user_id, created_at], map: \"idx_voice_usage_user_date\")\n}\n",
  "inlineSchemaHash": "dd79a69b2df7ee771199abe8c7e9a785f960ecc00e5d9bc83363ee5e449b1788",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"chat_messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audio_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_sessions\",\"kind\":\"object\",\"type\":\"chat_sessions\",\"relationName\":\"chat_messagesTochat_sessions\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"chat_messagesTousers\"}],\"dbName\":null},\"chat_sessions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"chat_messages\",\"kind\":\"object\",\"type\":\"chat_messages\",\"relationName\":\"chat_messagesTochat_sessions\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"chat_sessionsTousers\"},{\"name\":\"user_journal_responses\",\"kind\":\"object\",\"type\":\"user_journal_responses\",\"relationName\":\"chat_sessionsTouser_journal_responses\"},{\"name\":\"messages_relation\",\"kind\":\"object\",\"type\":\"messages\",\"relationName\":\"chat_sessionsTomessages\"}],\"dbName\":null},\"check_ins\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mood\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"energy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sleep\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"check_insTousers\"}],\"dbName\":null},\"coaching_sessions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coach_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduled_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration_minutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"max_participants\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meeting_link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"coaching_sessionsTousers\"},{\"name\":\"session_messages\",\"kind\":\"object\",\"type\":\"session_messages\",\"relationName\":\"coaching_sessionsTosession_messages\"},{\"name\":\"session_participants\",\"kind\":\"object\",\"type\":\"session_participants\",\"relationName\":\"coaching_sessionsTosession_participants\"}],\"dbName\":null},\"community_channels\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required_tier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"community_channelsTousers\"},{\"name\":\"community_polls\",\"kind\":\"object\",\"type\":\"community_polls\",\"relationName\":\"community_channelsTocommunity_polls\"},{\"name\":\"community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_channelsTocommunity_posts\"}],\"dbName\":null},\"community_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"host_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"event_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduled_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration_minutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"max_attendees\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meeting_link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recording_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required_tier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"community_eventsTousers\"},{\"name\":\"event_rsvps\",\"kind\":\"object\",\"type\":\"event_rsvps\",\"relationName\":\"community_eventsToevent_rsvps\"}],\"dbName\":null},\"community_polls\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"community_channels\",\"kind\":\"object\",\"type\":\"community_channels\",\"relationName\":\"community_channelsTocommunity_polls\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"community_pollsTousers\"},{\"name\":\"poll_votes\",\"kind\":\"object\",\"type\":\"poll_votes\",\"relationName\":\"community_pollsTopoll_votes\"}],\"dbName\":null},\"community_posts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_pinned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_announcement\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reply_to_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"community_channels\",\"kind\":\"object\",\"type\":\"community_channels\",\"relationName\":\"community_channelsTocommunity_posts\"},{\"name\":\"community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_postsTocommunity_posts\"},{\"name\":\"other_community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_postsTocommunity_posts\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"community_postsTousers\"},{\"name\":\"polls\",\"kind\":\"object\",\"type\":\"polls\",\"relationName\":\"community_postsTopolls\"},{\"name\":\"post_comments\",\"kind\":\"object\",\"type\":\"post_comments\",\"relationName\":\"community_postsTopost_comments\"},{\"name\":\"post_reactions\",\"kind\":\"object\",\"type\":\"post_reactions\",\"relationName\":\"community_postsTopost_reactions\"}],\"dbName\":null},\"community_resources\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required_tier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"download_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploaded_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"community_resourcesTousers\"}],\"dbName\":null},\"daily_check_ins_simple\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"daily_check_ins_simpleTousers\"}],\"dbName\":null},\"daily_checkins\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mood\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"energy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sleep\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"daily_rituals\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nervous_system_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ritual_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ritual_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reflection\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"daily_ritualsTousers\"}],\"dbName\":null},\"direct_messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipient_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users_direct_messages_recipient_idTousers\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"direct_messages_recipient_idTousers\"},{\"name\":\"users_direct_messages_sender_idTousers\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"direct_messages_sender_idTousers\"}],\"dbName\":null},\"event_rsvps\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"event_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"community_events\",\"kind\":\"object\",\"type\":\"community_events\",\"relationName\":\"community_eventsToevent_rsvps\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"event_rsvpsTousers\"}],\"dbName\":null},\"files\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploaded_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"filesTousers\"}],\"dbName\":null},\"journal_entries\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"journal_entriesTousers\"}],\"dbName\":null},\"journal_prompts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_journal_responses\",\"kind\":\"object\",\"type\":\"user_journal_responses\",\"relationName\":\"journal_promptsTouser_journal_responses\"}],\"dbName\":null},\"messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_sessions\",\"kind\":\"object\",\"type\":\"chat_sessions\",\"relationName\":\"chat_sessionsTomessages\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"messagesTousers\"}],\"dbName\":null},\"password_reset_tokens\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"used_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"password_reset_tokensTousers\"}],\"dbName\":null},\"poll_votes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poll_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"option_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"community_polls\",\"kind\":\"object\",\"type\":\"community_polls\",\"relationName\":\"community_pollsTopoll_votes\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"poll_votesTousers\"}],\"dbName\":null},\"polls\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"closes_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_postsTopolls\"}],\"dbName\":null},\"post_comments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_postsTopost_comments\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"post_commentsTousers\"}],\"dbName\":null},\"post_reactions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reaction_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_postsTopost_reactions\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"post_reactionsTousers\"}],\"dbName\":null},\"protocol_completions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"protocol_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"protocols\",\"kind\":\"object\",\"type\":\"protocols\",\"relationName\":\"protocol_completionsToprotocols\"}],\"dbName\":null},\"protocol_items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"completion_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"last_completed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"protocol_itemsTousers\"}],\"dbName\":null},\"protocols\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"protocol_completions\",\"kind\":\"object\",\"type\":\"protocol_completions\",\"relationName\":\"protocol_completionsToprotocols\"}],\"dbName\":null},\"ritual_library\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ritual_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ritual_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state_match\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"ritual_libraryTousers\"}],\"dbName\":null},\"session_messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coaching_sessions\",\"kind\":\"object\",\"type\":\"coaching_sessions\",\"relationName\":\"coaching_sessionsTosession_messages\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"session_messagesTousers\"}],\"dbName\":null},\"session_participants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joined_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coaching_sessions\",\"kind\":\"object\",\"type\":\"coaching_sessions\",\"relationName\":\"coaching_sessionsTosession_participants\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"session_participantsTousers\"}],\"dbName\":null},\"test_users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription_tier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"user_insights\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insight_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confidence_score\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"user_insightsTousers\"}],\"dbName\":null},\"user_journal_responses\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"session_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"journal_prompts\",\"kind\":\"object\",\"type\":\"journal_prompts\",\"relationName\":\"journal_promptsTouser_journal_responses\"},{\"name\":\"chat_sessions\",\"kind\":\"object\",\"type\":\"chat_sessions\",\"relationName\":\"chat_sessionsTouser_journal_responses\"}],\"dbName\":null},\"user_roles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"user_rolesTousers\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription_tier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trial_ends_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"email_updates\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"privacy_mode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orientation_completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"orientation_data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"test_mode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stripe_customer_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripe_subscription_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chat_messages\",\"kind\":\"object\",\"type\":\"chat_messages\",\"relationName\":\"chat_messagesTousers\"},{\"name\":\"chat_sessions\",\"kind\":\"object\",\"type\":\"chat_sessions\",\"relationName\":\"chat_sessionsTousers\"},{\"name\":\"check_ins\",\"kind\":\"object\",\"type\":\"check_ins\",\"relationName\":\"check_insTousers\"},{\"name\":\"coaching_sessions\",\"kind\":\"object\",\"type\":\"coaching_sessions\",\"relationName\":\"coaching_sessionsTousers\"},{\"name\":\"community_channels\",\"kind\":\"object\",\"type\":\"community_channels\",\"relationName\":\"community_channelsTousers\"},{\"name\":\"community_events\",\"kind\":\"object\",\"type\":\"community_events\",\"relationName\":\"community_eventsTousers\"},{\"name\":\"community_polls\",\"kind\":\"object\",\"type\":\"community_polls\",\"relationName\":\"community_pollsTousers\"},{\"name\":\"community_posts\",\"kind\":\"object\",\"type\":\"community_posts\",\"relationName\":\"community_postsTousers\"},{\"name\":\"community_resources\",\"kind\":\"object\",\"type\":\"community_resources\",\"relationName\":\"community_resourcesTousers\"},{\"name\":\"daily_check_ins_simple\",\"kind\":\"object\",\"type\":\"daily_check_ins_simple\",\"relationName\":\"daily_check_ins_simpleTousers\"},{\"name\":\"daily_rituals\",\"kind\":\"object\",\"type\":\"daily_rituals\",\"relationName\":\"daily_ritualsTousers\"},{\"name\":\"direct_messages_direct_messages_recipient_idTousers\",\"kind\":\"object\",\"type\":\"direct_messages\",\"relationName\":\"direct_messages_recipient_idTousers\"},{\"name\":\"direct_messages_direct_messages_sender_idTousers\",\"kind\":\"object\",\"type\":\"direct_messages\",\"relationName\":\"direct_messages_sender_idTousers\"},{\"name\":\"event_rsvps\",\"kind\":\"object\",\"type\":\"event_rsvps\",\"relationName\":\"event_rsvpsTousers\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"files\",\"relationName\":\"filesTousers\"},{\"name\":\"journal_entries\",\"kind\":\"object\",\"type\":\"journal_entries\",\"relationName\":\"journal_entriesTousers\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"messages\",\"relationName\":\"messagesTousers\"},{\"name\":\"password_reset_tokens\",\"kind\":\"object\",\"type\":\"password_reset_tokens\",\"relationName\":\"password_reset_tokensTousers\"},{\"name\":\"poll_votes\",\"kind\":\"object\",\"type\":\"poll_votes\",\"relationName\":\"poll_votesTousers\"},{\"name\":\"post_comments\",\"kind\":\"object\",\"type\":\"post_comments\",\"relationName\":\"post_commentsTousers\"},{\"name\":\"post_reactions\",\"kind\":\"object\",\"type\":\"post_reactions\",\"relationName\":\"post_reactionsTousers\"},{\"name\":\"protocol_items\",\"kind\":\"object\",\"type\":\"protocol_items\",\"relationName\":\"protocol_itemsTousers\"},{\"name\":\"ritual_library\",\"kind\":\"object\",\"type\":\"ritual_library\",\"relationName\":\"ritual_libraryTousers\"},{\"name\":\"session_messages\",\"kind\":\"object\",\"type\":\"session_messages\",\"relationName\":\"session_messagesTousers\"},{\"name\":\"session_participants\",\"kind\":\"object\",\"type\":\"session_participants\",\"relationName\":\"session_participantsTousers\"},{\"name\":\"user_insights\",\"kind\":\"object\",\"type\":\"user_insights\",\"relationName\":\"user_insightsTousers\"},{\"name\":\"user_roles\",\"kind\":\"object\",\"type\":\"user_roles\",\"relationName\":\"user_rolesTousers\"},{\"name\":\"voice_usage\",\"kind\":\"object\",\"type\":\"voice_usage\",\"relationName\":\"usersTovoice_usage\"}],\"dbName\":null},\"voice_usage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"usersTovoice_usage\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

